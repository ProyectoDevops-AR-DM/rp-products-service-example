name: Static Analysis

on:
 name: Static Analysis

on:
  push:
    branches:
      - main  # Ejecutar el workflow cuando haya un push a la rama main
  pull_request:
    branches:
      - main  # Ejecutar el workflow para pull requests a la rama main

jobs:
  static-analysis:
    runs-on: ubuntu-latest  # Utilizar la última versión de Ubuntu para el runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # Obtener el código del repositorio

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'  # Reemplaza con la versión de Java que necesitas
        distribution: 'adopt'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven

    - name: Install dependencies
      run: mvn install -DskipTests
      # Instala las dependencias del proyecto

    - name: Set up SonarCloud
      run: |
        echo "${{ secrets.SONAR_TOKEN }}" | docker login --username ${{ secrets.SONAR_ORGANIZATION }} --password-stdin sonarcloud.io
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Run SonarCloud Analysis
      run: |
        mvn sonar:sonar \
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
