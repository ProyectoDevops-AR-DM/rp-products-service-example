name: Deploy to Kubernetes

on:
  push:
    branches:
      - main  # Ejecutar el workflow cuando haya un push a la rama main

jobs:
  deploy:
    runs-on: ubuntu-latest  # Utilizar la última versión de Ubuntu para el runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Obtener el código del repositorio

    - name: Set up SonarCloud
      run: |
        sonar-scanner \
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
        SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
        SONAR_PROJECT_NAME: ${{ secrets.SONAR_PROJECT_NAME }}

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}  # Utiliza el token de sesión si es necesario para tu configuración

    - name: Set up Kubernetes CLI
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'  # Puedes especificar una versión en lugar de 'latest' para asegurar la compatibilidad futura

    - name: Configure kubectl
      run: aws eks update-kubeconfig --name eks-proyectodevops --region ${{ secrets.AWS_REGION }}
      # Actualiza el archivo kubeconfig con la configuración del cluster EKS

    - name: Validate deployment YAML
      run: kubectl apply -f ./products-service-deployment.yaml --dry-run=client
      # Valida el archivo de despliegue antes de aplicarlo

    - name: Run static code analysis
      run: |
        sonar-scanner \
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      # Ejecuta el análisis de código estático usando SonarCloud

    - name: Run tests
      run: |
        kubectl run test-container --image=your-test-image --command -- /bin/sh -c "your-test-command"
        kubectl wait --for=condition=complete pod/test-container
        kubectl logs test-container
        kubectl delete pod test-container
      # Reemplaza `your-test-image` con la imagen Docker que contenga tus tests, y `your-test-command` con el comando para ejecutar los tests

    - name: Verify deployment YAML exists
      run: ls -l ./products-service-deployment.yaml
      # Verifica que el archivo de despliegue existe. Podrías querer usar `cat` para visualizar su contenido

    - name: Deploy to Kubernetes
      run: kubectl apply -f ./products-service-deployment.yaml
      # Aplica el archivo de despliegue a Kubernetes

    - name: Check deployment status
      run: kubectl rollout status deployment/products-service-deployment
      # Verifica el estado del despliegue
